#!/usr/bin/env zsh

#------------------------------------------------------------------------------
# Shortcut paths and essential environment variables
#------------------------------------------------------------------------------
export DOTS=$HOME/src/dotfiles
export DOTS_ZSH=$DOTS/zsh
# export BREW_PREFIX="/opt/homebrew"
# export BREWFILE_GLOBAL=${HOMEBREW_BUNDLE_FILE_GLOBAL:-$HOME/.Brewfile}
export EDITOR='nvim'

# #------------------------------------------------------------------------------
# # Initialize zplug (Zsh plugin manager) and install plugins if necessary
# #------------------------------------------------------------------------------
# if [[ ! -d ~/.zplug ]]; then
#   echo "zplug not found. Installing..."
#   curl -sL --proto-redir -all,https https://raw.githubusercontent.com/zplug/installer/master/installer.zsh | zsh
#   echo "zplug installed. Please wait..."
#   sleep 3  # Wait for 3 seconds to ensure everything is set up properly
#   # source ~/.zplug/init.zsh  # Initialize zplug immediately after installation
# fi
#
# # Ensure zplug is sourced after installation
# source ~/.zplug/init.zsh
#
# #------------------------------------------------------------------------------
# # zsh plugins list (existing and additional plugins)
# #------------------------------------------------------------------------------
# zplug "zsh-users/zsh-autosuggestions"
# zplug "zdharma-continuum/fast-syntax-highlighting"
# zplug "zsh-users/zsh-syntax-highlighting", as:plugin
# zplug "zsh-users/zsh-completions", as:plugin
# # zplug "ajeetdsouza/zoxide", as:plugin, if:"(( $+commands[zoxide] ))"
# zplug "junegunn/fzf", as:plugin, if:"(( $+commands[fzf] ))"
# zplug "Aloxaf/fzf-tab", as:plugin, if:"(( $+commands[fzf] ))"
# zplug "sindresorhus/pure", as:theme, use:pure.zsh
#
# # alias helper
# zplug "plugins/aliases", from:oh-my-zsh, as:plugin
# zplug "plugins/command-not-found", from:oh-my-zsh, as:plugin
# # git aliases
# zplug "plugins/git", from:oh-my-zsh, as:plugin, if:"(( $+commands[git] ))"
# # git extra util commands (https://github.com/unixorn/git-extra-commands?tab=readme-ov-file#oh-my-zsh)
# zplug "unixorn/git-extra-commands", as:plugin, if:"(( $+commands[git] ))"
#
# # reminder of existing aliases
# zplug "MichaelAquilina/zsh-you-should-use"
#
# # Additional plugins for functionality
# zplug "mafredri/zsh-async"  # Required for Pure theme
#
# # Install any missing plugins
# if ! zplug check --verbose; then
#     zplug install
# fi
#
# # Load all plugins
# zplug load --verbose

#------------------------------------------------------------------------------
# Enable Vim mode in Zsh and custom keybindings
#------------------------------------------------------------------------------
bindkey -v # Enable Vim keybindings

# Rebind Ctrl+R to use Atuin's interactive search
bindkey '^R' 'atuin search --interactive'

#------------------------------------------------------------------------------
# Configure fzf with Vim-like keybindings
#------------------------------------------------------------------------------
export FZF_DEFAULT_OPTS="--layout=reverse --multi --height=40% --bind='ctrl-j:down,ctrl-k:up,ctrl-m:accept' --bind='esc:cancel'"

# Advanced fzf usage: Ctrl-T for file search, Alt-C for directory search
# Ctrl-R is bound to Atuin's search above, so here are custom keybindings:
bindkey '^T' fzf-file-widget
bindkey '^[C' fzf-cd-widget

#------------------------------------------------------------------------------
# Initialize additional tools and configurations
#------------------------------------------------------------------------------
eval "$(atuin init zsh)"       # Initialize Atuin for advanced command history
eval "$(zoxide init zsh)"      # Initialize zoxide for smarter directory navigation
eval "$(starship init zsh)"    # Initialize Starship prompt (optional if using Pure theme)
eval "$(fnm env --use-on-cd --shell zsh)"
eval "$(thefuck --alias fk)"

# Source Broot launcher for easier navigation (if installed)
[[ -s /Users/h/.config/broot/launcher/bash/br ]] && source /Users/h/.config/broot/launcher/bash/br

# pyenv init
export PYENV_ROOT="$HOME/.pyenv"
[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"

#------------------------------------------------------------------------------
# Custom aliases
#------------------------------------------------------------------------------

# TODO: source $DOTS_ZSH/aliases.symlink.zsh  # Load additional aliases

alias ls='eza --color=auto -al'
alias ll='eza -lah --color=auto'
alias ze="$EDITOR $HOME/.zshrc"  # Edit .zshrc
alias zs="source $HOME/.zshrc"   # Reload zsh configuration

alias zp="zplug"
alias zph="zplug --help"
alias zpl="zplug --log"

#-----------------
# redirect to more modern(?) preferred tool
# 
# WARN: this alias might backfire unexpectedly when running scripts that expect original binaries
#-----------------
alias help="tldr"

alias http="xh"
alias curl="curlie"

# process viewer
alias top="glances"
alias htop="glances"
#-----------------

# NOTE: inspired by ohmyzsh ("plugin/brew")

alias be="nvim ~/.Brewfile"
alias bl="brew list"
alias bo="brew outdated"
alias bs="brew search"
alias bsd="brew search --desc"
alias bsl="brew services list"
alias bsoff="brew services stop"
alias bson="brew services start"
alias bsr="brew services run"
alias bu="brew update"
alias ba="brew autoremove"
alias bi="brew info"
alias bci="brew info --cask"
alias bin="brew install"
alias bcin="brew install --cask"
alias bcl="brew list --cask"
alias bcn="brew cleanup"
alias bco="brew outdated --cask"
alias bcrin="brew reinstall --cask"
alias bcubc="brew upgrade --cask && brew cleanup"
alias bcubo="brew update && brew outdated --cask"
alias bcup="brew upgrade --cask"
alias bfu="brew upgrade --formula"
alias brewp="brew pin"
alias brewsp="brew list --pinned"
alias bubo="brew update && brew outdated"
alias bugbc="brew upgrade --greedy && brew cleanup"
alias bup="brew upgrade"
alias buz="brew uninstall --zap"

# brew bundle global
alias bbin="brew bundle install --all --global --verbose"
alias bbsave="brew bundle dump --all --verbose --describe --global -f"
alias bbcleanup="brew bundle cleanup --all --verbose --global -f"
alias bbcheck="brew bundle check --all --verbose --global"
alias bbdiff="brew bundle cleanup --all --verbose --global"

# TODO: add CLI AI LLM tool for asking questions (web search + AI assistant both modes/cases)
alias ghc="gh copilot suggest"

function yy() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")"
	yazi "$@" --cwd-file="$tmp"
	if cwd="$(cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		builtin cd -- "$cwd"
	fi
	rm -f -- "$tmp"
}

